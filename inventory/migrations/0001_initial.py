# Generated by Django 3.1.2 on 2020-10-29 02:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('events', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EquipmentCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, help_text="If this is a subcategory, the parent is what this is a subcategory of. Choose '---' if not.", null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='inventory.equipmentcategory')),
                ('usual_place', models.ForeignKey(blank=True, help_text='Default place for items of this category. Inherits from parent categories.', null=True, on_delete=django.db.models.deletion.PROTECT, to='events.location')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EquipmentClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=190)),
                ('description', models.TextField(blank=True, help_text='Function, appearance, and included acessories', null=True)),
                ('value', models.DecimalField(blank=True, decimal_places=2, help_text='Estimated purchase value', max_digits=9, null=True)),
                ('model_number', models.CharField(blank=True, max_length=190, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=128, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('holds_items', models.BooleanField(default=False, help_text='Can hold other items')),
                ('length', models.DecimalField(blank=True, decimal_places=2, help_text='Length in inches', max_digits=6, null=True)),
                ('width', models.DecimalField(blank=True, decimal_places=2, help_text='Width in inches', max_digits=6, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, help_text='Height in inches', max_digits=6, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, help_text='Weight in lbs.', max_digits=6, null=True)),
                ('wiki_text', models.TextField(blank=True, help_text='How to use this item', null=True)),
                ('category', mptt.fields.TreeForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.equipmentcategory')),
            ],
            options={
                'permissions': (('edit_equipment_wiki', 'Edit the wiki of an equipment'), ('view_equipment_value', 'View estimated value of an equipment'), ('view_equipment', 'View equipment')),
            },
        ),
        migrations.CreateModel(
            name='EquipmentItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(blank=True, max_length=190, null=True)),
                ('barcode', models.BigIntegerField(blank=True, null=True, unique=True)),
                ('purchase_date', models.DateField(blank=True)),
                ('features', models.CharField(blank=True, max_length=128, null=True, verbose_name='Identifying Features')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('case', mptt.fields.TreeForeignKey(blank=True, help_text='Case or item that contains this item', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='inventory.equipmentitem')),
                ('home', models.ForeignKey(blank=True, help_text='Place where this item typically resides.', null=True, on_delete=django.db.models.deletion.PROTECT, to='events.location')),
                ('item_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.equipmentclass')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EquipmentStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('glyphicon', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentMaintEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=32)),
                ('entry', models.TextField(blank=True, null=True)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance', to='inventory.equipmentitem')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.equipmentstatus')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'get_latest_by': 'date',
            },
        ),
        migrations.CreateModel(
            name='AccessRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('reason', models.CharField(max_length=120)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_logs', to='events.location')),
                ('users', models.ManyToManyField(related_name='access_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('view_access_logs', 'View Access Logs'),),
            },
        ),
    ]
